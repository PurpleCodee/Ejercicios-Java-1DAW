/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package INTERFACES;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;

/**
 *
 * @author MEDAC
 */
public class E_1_parecidosPractica extends javax.swing.JFrame {

    /**
     * Creates new form E_1_parecidosPractica
     */
    public E_1_parecidosPractica() {
        initComponents();
        setLocationRelativeTo(null);//que salga centradita la ventana
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fondo = new javax.swing.JPanel();
        origenTitulo = new javax.swing.JLabel();
        recogerDatos = new javax.swing.JTextField();
        salidaTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaTexto = new javax.swing.JTextArea();
        destinoTitulo = new javax.swing.JLabel();
        destinoDatos = new javax.swing.JTextField();
        botonLeer = new javax.swing.JButton();
        botonEscribir = new javax.swing.JButton();
        borrarTexto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        origenTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        origenTitulo.setText("ORIGEN");

        salidaTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        salidaTitulo.setText("SALIDA");

        areaTexto.setColumns(20);
        areaTexto.setRows(5);
        jScrollPane1.setViewportView(areaTexto);

        destinoTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        destinoTitulo.setText("DESTINO");

        botonLeer.setText("LEER");
        botonLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonLeerActionPerformed(evt);
            }
        });

        botonEscribir.setText("ESCRIBIR");
        botonEscribir.setEnabled(false);
        botonEscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEscribirActionPerformed(evt);
            }
        });

        borrarTexto.setText("BORRAR TEXTO");
        borrarTexto.setActionCommand("");
        borrarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarTextoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fondoLayout = new javax.swing.GroupLayout(fondo);
        fondo.setLayout(fondoLayout);
        fondoLayout.setHorizontalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(fondoLayout.createSequentialGroup()
                                    .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(salidaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(origenTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addComponent(recogerDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(fondoLayout.createSequentialGroup()
                                        .addComponent(destinoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(destinoDatos))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(fondoLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(botonLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61)
                                .addComponent(botonEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(fondoLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(borrarTexto)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        fondoLayout.setVerticalGroup(
            fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fondoLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(origenTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(recogerDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(salidaTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(destinoDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(fondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonEscribir, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(borrarTexto, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonLeerActionPerformed
        //------------FUNCIONALIDADES DEL BOTON-------------------------
        //si lo pulso se desmarca
        botonLeer.setEnabled(false);
        //avilita el boton escribir si pulso el boton leer
        botonEscribir.setEnabled(true);

        //------PLANTILLA DE LECTURA--------
        String rutita = recogerDatos.getText();
        String ruta = "src/INTERFACES/datos/" + rutita;
        String linea = "";
        String texto = "";
        BufferedReader lector = null;

        try {
            //compruebo que el campo esta vacio
            if (recogerDatos.getText().equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "El campo a rellenar esta vacio",
                        "cosas de informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                //si no esta vacio procedo a leer
                //inicializo lector
                lector = new BufferedReader(new FileReader(ruta));
                //leo
                do {
                    linea = lector.readLine();
                    if (linea != null) {
                        //concateno una linea y salto de linea
                        texto += linea + System.lineSeparator();
                    }
                } while (linea != null);

                if (!areaTexto.equals("")) {
                    areaTexto.setText(texto);

                }
            }

        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "El fichero no ha sido encontrado",
                    "cosas de informacion", JOptionPane.ERROR_MESSAGE);

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "No se han podido cerrar los flujos",
                    "cosas de informacion", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                if (lector != null) {
                    lector.close();

                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "ERROR CERRANDO FLUJOS",
                        "cosas de informacion", JOptionPane.ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_botonLeerActionPerformed

    private void botonEscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEscribirActionPerformed
        //------------FUNCIONALIDADES DEL BOTON-------------------------
        //esta bloqueado por defecto si pulso leer se avilita
        //si pulso el boton escribir avilito el boton leer
        botonLeer.setEnabled(true);
        botonEscribir.setEnabled(false);

        //procedo a crear nuevos ficheros con escritura y a escribir dentro
        String ruta = "src/INTERFACES/datos/" + destinoDatos.getText();
        BufferedWriter escritor = null;
        String texto = "";

        try {
            if (destinoDatos.getText().equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(this, "El campo a rellenar esta vacio",
                        "cosas de informacion", JOptionPane.INFORMATION_MESSAGE);
            } else {
                escritor = new BufferedWriter(new FileWriter(ruta,true));
                texto = areaTexto.getText();
                escritor.write(texto);
                escritor.write(System.lineSeparator());

            }

        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Problema escribiendo",
                    "cosas de informacion", JOptionPane.ERROR_MESSAGE);
        } finally {

            try {
                if (escritor != null) {
                    escritor.close();
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "PROBLEMA CERRANDO FLUJOS DE ESCRITURA",
                        "cosas de informacion", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_botonEscribirActionPerformed
    }
    private void borrarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarTextoActionPerformed
        //BORRO LOS DATOS QUE HYA DENTRO DE LOS CAMPOS QUE SE QUED LIMPITO
        areaTexto.setText("");
        destinoDatos.setText("");
        recogerDatos.setText("");
    }//GEN-LAST:event_borrarTextoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(E_1_parecidosPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(E_1_parecidosPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(E_1_parecidosPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(E_1_parecidosPractica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new E_1_parecidosPractica().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTexto;
    private javax.swing.JButton borrarTexto;
    private javax.swing.JButton botonEscribir;
    private javax.swing.JButton botonLeer;
    private javax.swing.JTextField destinoDatos;
    private javax.swing.JLabel destinoTitulo;
    private javax.swing.JPanel fondo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel origenTitulo;
    private javax.swing.JTextField recogerDatos;
    private javax.swing.JLabel salidaTitulo;
    // End of variables declaration//GEN-END:variables
}
